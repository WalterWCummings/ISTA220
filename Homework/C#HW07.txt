

Name: Walter Cummings 
Date: Feb, 2, 2021
File: C#HW07



1.  What is aclass?  According to the book, what does a class “arrange?”

Short for classification, classes arragne informatuon and behavior into a meaningful entitity; a type. 

2.  What are the two purposes of encapsulatiohn? Combine methos and data within a class, supporting classification and control the accessibility of the methods and the data, control the use of the class. 

3.  How do you instantiate an instance of a class?  How do you access that instance? using the new keyword; call it by the new keyword  

4.  What is the default access of the fields and methods of a class?  How do you change the default? The default is private but you change it by declaring the method/field public or private. During class definition; Field: data type within the class you define; methods: functions you can call in the field (behavior) 

5.  What is the syntax for writing aconstructor? c = new Circle(); A constructor is a special method of the class which gets automatically invoked whenever an instance of the class is created. zero or more parameters. Exactly same name as the class. No return type. 

6.  What is the difference between class fields and methods, and instance fields ad methods?  How do youcreate class fields and methods? Class emethods belong to all the objects which you create in that class. All objects share that one class field or method, created by using the static keyword. ;Class field and methods can only be accesed by the methods themselves. Instant methods are used only by the instnat method. Not shared. 
7.  How do you bring a static class in scope?  Why would you want to bring a static class in scope? the using statment bring static into scope; You would want to do this because your static field is exclusive to static and not your public or private. 

8.  Can you think of a good reason to create ananonymous class?  What is it? You could use it to encapsulate readonly files in a quick efficient way. It is a class automatically generated by the compiler. 
DBconn dbc = new DBconn(); // database connection
string query = 'select * from tanks";
var mytanks = dbc.runQuery(query);

9.  What is polymorphismas this term is used in computer science?  This is not in the book. Polymorphism means many forms. It allows multiple classes to perform a single task differently. 

10.  What is message passingas this term is used in computer science?  This is not in the book. Message passing is given the name to distinquish it from passing parameters. It is how objects communicate to one another. Think: Object1 "this happens" tells obj2 to "do this" not caught up in details.  

11.  What was the first object-oriented programming language? "The first programming language widely recognized as “object oriented” was Simula, specified in 1965."

12.  Consider this quote by Alexander Stepanov:I find OOP technically unsound.  It attempts to decompose the world in terms of interfaces that vary on a single type.  To deal with the real problems you need multi sorted algebras— families of interfaces that span multiple types.  I find OOP philosophically unsound.  It claims that everything is an object.  Even if it is true it is not very interesting — saying that everything is an object is saying nothing at all.  Who is Alexander Stephanov?  What do you think about this quote? Alexander Stephanov is a russian american computer programmer which is known as an advocate of generic programming and designer of C++ standard template library. I think this quote is a fair observation. If you tell me eveything is an object, it raises the question that there is no distinction between  


Variable: namespace in memory. Stored location of memory. 
Pointer: Memory address
Onject: Memory location 
Stack == heap
Stack = organizaed memory { ... }, working memory
Heap = unorganized memory 

Notes:
"New" keyword allocates memory from the heap. Just enough memory to hold the new defined object. It then returns the memory address to the object.

New > Heap (allocates the needed memory > returns the memory address and places it in the varible) > object or instance of the class 